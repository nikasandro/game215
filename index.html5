<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Phaser Ball Animation</title>
    <script src="https://cdn.jsdelivr.net/npm/phaser@3.60.0/dist/phaser.min.js"></script>
    <style>
        body {
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #f0f0f0;
        }
        canvas {
            border: 2px solid black;
        }
        .controls {
            margin-top: 10px;
        }
    </style>
</head>
<body>

    <div id="phaser-game"></div>
    <div class="controls">
        <button id="startButton">Start</button>
        <button id="stopButton">Stop</button>
    </div>

    <script>
        let game; // Phaser game instance
        let ball; // Ball sprite
        let ballVelocityX = 200; // Speed on X
        let ballVelocityY = 150; // Speed on Y

        // Phaser Game Configuration
        const config = {
            type: Phaser.AUTO,
            parent: "phaser-game",
            width: window.innerWidth - 50,
            height: window.innerHeight - 100,
            physics: {
                default: "arcade",
                arcade: {
                    gravity: { y: 0 },
                    debug: false
                }
            },
            scene: {
                preload: preload,
                create: create,
                update: update
            }
        };

        function preload() {
            this.load.image("ball", "https://upload.wikimedia.org/wikipedia/commons/7/7a/Basketball.png");
        }

        function create() {
            // Ball properties
            ball = this.physics.add.image(100, 100, "ball").setScale(0.1);
            ball.setVelocity(ballVelocityX, ballVelocityY);
            ball.setBounce(1, 1); // Makes it bounce on walls
            ball.setCollideWorldBounds(true); // Keep ball inside canvas

            // Resize game when window resizes
            window.addEventListener("resize", resizeGame);
        }

        function update() {
            // Game loop (not needed much since physics handles movement)
        }

        function resizeGame() {
            if (game) {
                game.scale.resize(window.innerWidth - 50, window.innerHeight - 100);
            }
        }

        function startGame() {
            if (!game) {
                game = new Phaser.Game(config);
            }
        }

        function stopGame() {
            if (game) {
                game.destroy(true); // Properly destroy Phaser instance
                game = null;
            }
        }

        // Button event listeners
        document.getElementById("startButton").addEventListener("click", startGame);
        document.getElementById("stopButton").addEventListener("click", stopGame);
    </script>

</body>
</html>

